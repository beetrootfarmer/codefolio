<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.codefolio.mapper.UserMapper">

    <resultMap type="com.codefolio.vo.UserVO" id="UserResult">
        <result property="userSeq" column="user_seq"/>
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="pwd" column="pwd"/>
        <result property="email" column="email"/>
        <result property="gitId" column="gitId"/>
        <result property="job" column="job"/>
        <result property="stack" column="stack"/>
        <result property="introFile" column="intro_file"/>
        <result property="img" column="img"/>
        <!--        <result property="reg" column="reg"/>-->
    </resultMap>

<!--    테스트 쿼리 : 모든 회원정보 리스트 출력-->
    <!--유저 리스트 받아오기-->
    <select id="getAllUserData" parameterType="com.codefolio.vo.UserVO" resultType="map">
        SELECT * FROM codefolio.user ORDER BY user_seq DESC;
    </select>

    <select id="getUserByEmail" parameterType="String" resultType="com.codefolio.vo.UserVO" resultMap="UserResult">
        SELECT * FROM codefolio.user WHERE email=#{email} ORDER BY email DESC LIMIT 1
    </select>

    <select id="getSaltKey" parameterType="String" resultType="String">
        SELECT salt_key FROM codefolio.user WHERE email=#{email} ORDER BY email DESC LIMIT 1
    </select>

    <select id="getUUIDById" parameterType="String" resultType="String">
        SELECT UUID FROM codefolio.user WHERE id=#{id} ORDER BY id DESC LIMIT 1
    </select>

    <select id="getUserByUUID" parameterType="String" resultType="com.codefolio.vo.UserVO" resultMap="UserResult">
        SELECT * FROM codefolio.user WHERE UUID=#{UUID};
    </select>

    <!--join user-->
    <insert id="joinUser" parameterType="com.codefolio.vo.UserVO"  useGeneratedKeys="true" keyProperty="userSeq">
            INSERT INTO codefolio.user SET
            UUID = #{UUID},id=#{id},pwd=#{pwd}, name=#{name},email=#{email},gitId=#{gitId},cre_date=NOW(),reg_date=NOW(),role="ROLE_USER",salt_key=#{saltKey};
    </insert>


<!--    followUser      -->
    <insert id="followUser" parameterType="com.codefolio.vo.FollowVO" useGeneratedKeys="true" keyProperty="followSeq">
        INSERT INTO codefolio.follow
        SET follower_id=#{followerId},follower_stack=#{followerStack},follower_img=#{followerImg},
            followee_id=#{followeeId},followee_stack=#{followeeStack},followee_img=#{followeeImg};
    </insert>

    <!--회원정보수정(마이페이지) -> name,pwd,gitId,stack,job,img,introFile-->
<!--동적 SQL <if>사용 => mybatis의 기능-->
    <update id="updateUser" parameterType="com.codefolio.vo.UserVO">
        UPDATE user
        SET id=#{id},name=#{name},gitId=#{gitId},job=#{job},stack=#{stack},intro_file=#{introFile}
        WHERE id=#{id}
        ORDER BY id DESC LIMIT 1
    </update>

    <update id="updateUserId">
        UPDATE user
        SET id=#{getUserId} WHERE UUID=#{userUUID}
    </update>

    <update id="updatePwd">
        UPDATE user
        SET salt_key=#{saltKey},pwd=#{pwd} WHERE UUID=#{UUID};
    </update>

    <update id="updateUserImg" parameterType="com.codefolio.vo.UserVO">
        UPDATE user SET img=#{img} WHERE id=#{id} ORDER BY id DESC LIMIT 1;
    </update>

    <update id="updateRefToken" parameterType="com.codefolio.vo.UserVO">
        UPDATE user SET ref_token=#{refToken} WHERE UUID=#{UUID};
    </update>

    <!--user delete-->
    <delete id="deleteUser" parameterType="String">
        DELETE FROM codefolio.user WHERE UUID=#{UUID};
    </delete>

    <!--email 중복 체크-->
    <select id="checkEmail" parameterType="String" resultType="int">
        SELECT COUNT(email) FROM codefolio.user WHERE email=#{email};
    </select>

    <!--email 중복 체크-->
    <select id="checkId" parameterType="String" resultType="int">
        SELECT COUNT(id) FROM codefolio.user WHERE id=#{id};
    </select>

    <select id="getUserById" parameterType="String" resultType="com.codefolio.vo.UserVO">
        SELECT * FROM codefolio.user WHERE id=#{id} ORDER BY id DESC LIMIT 1;
    </select>


    <!--유저 로그인 => security 적용 X-->
    <select id="checkLogin" parameterType="com.codefolio.vo.UserVO" resultType="String">
        SELECT id FROM codefolio.user WHERE email=#{email} and pwd=#{pwd} ORDER BY id DESC LIMIT 1;
    </select>


    <select id="secLogin" parameterType="com.codefolio.vo.UserVO" resultType="String">
        SELECT name FROM codefolio.user WHERE id=#{id} and pwd=#{pwd} ORDER BY id DESC LIMIT 1;
    </select>

    <!--&lt;!&ndash;findByLoginPwd&ndash;&gt;-->
<!--    <select id="searchEmail"-->
<!--            resultType="com.codefolio.vo.UserVO">-->
<!--        SELECT *-->
<!--        FROM codefolio.user-->
<!--        WHERE-->
<!--            email=#{email}-->
<!--    </select>-->

<!--&lt;!&ndash;비밀번호 변경&ndash;&gt;-->
<!--    <update id="changePwd" >-->
<!--        UPDATE user SET pwd=#{pwd} WHERE email=#{email}-->
<!--    </update>-->

</mapper>
